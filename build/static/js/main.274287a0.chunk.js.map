{"version":3,"sources":["firebase.js","store/actions/userActions.js","store/actions/chatActions.js","Components/Logo/Logo.js","Components/Navbar/Navbar.js","Components/Loader/Loader.js","App/App.js","reportWebVitals.js","store/reducers/chatReducer.js","store/reducers/userReducer.js","index.js","store/actions/actionsType.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","googleProvider","GoogleAuthProvider","getUserDetails","data","type","actionsType","emptyUser","getAllUsers","users","emptyAllUsers","startChat","friendData","getAllMessages","allMsg","isScreenSmallSize","boolean","value","openChat","resetChatSetting","Logo","className","to","src","alt","Navbar","dispatch","useDispatch","user","useSelector","state","displayName","onClick","signOut","then","collection","doc","uid","update","isOnline","catch","error","alert","message","Loader","size","style","width","height","LoginLazy","lazy","MainLazy","App","useEffect","unsubscribe","onAuthStateChanged","set","name","photoURL","email","time","FieldValue","serverTimestamp","onSnapshot","querySnapshot","forEach","push","fallback","color","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","friendInfo","friendId","friendName","friendImage","allMessages","IsScreenSmallSize","chatReducer","action","id","image","getValue","allUsers","userReducer","filter","el","combinesReducer","combineReducers","chat","ChatReducer","UserReducer","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","GET_USER_DETAILS","EMPTY_USER","GET_ALL_USERS","EMPTY_ALL_USERS","START_CHAT","GET_ALL_MESSAGES","RESET_CHAT_SETTING","IS_SCREEN_SMALL_SIZE","OPEN_CHAT"],"mappings":"2GAAA,kHAWMA,EAAMC,IAASC,cATE,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKLC,EAAOT,EAAIS,OACXC,EAAKV,EAAIW,YACTC,EAAiB,IAAIX,IAASQ,KAAKI,oB,gCCfzC,mJAEaC,EAAiB,SAACC,GAAD,MAAW,CAAEC,KAAMC,IAA8BF,KAAMA,IACxEG,EAAY,iBAAO,CAAEF,KAAMC,MAC3BE,EAAc,SAACC,GAAD,MAAY,CAAEJ,KAAMC,IAA2BG,MAAOA,IACpEC,EAAgB,iBAAO,CAAEL,KAAMC,O,gCCL5C,qLAEaK,EAAY,SAACC,GAAD,MAAiB,CAAEP,KAAMC,IAAwBM,eAC7DC,EAAiB,SAACC,GAAD,MAAa,CAAET,KAAMC,IAA8BQ,WACpEC,EAAoB,SAACC,GAAD,MAAc,CAAEX,KAAMC,IAAkCW,MAAOD,IACnFE,EAAW,SAACF,GAAD,MAAc,CAAEX,KAAMC,IAAuBW,MAAOD,IAC/DG,EAAmB,iBAAO,CAAEd,KAAMC,O,qMCQhCc,MAVf,WACI,OACI,qBAAKC,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBAAKC,IAAK,gBAA0CC,IAAI,mB,gCCgCzDC,MA9Bf,WACI,IAAMC,EAAWC,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKA,QAe7C,OACI,sBAAKP,UAAU,SAAf,UACI,cAAC,EAAD,IACW,OAATO,GAAiB,qBAAKP,UAAU,OAAf,SAAuBO,EAAKG,cAC/C,qBAAKV,UAAU,QAAf,SAEiB,OAATO,EAAgB,wBAAQI,QAnBzB,WACXlC,IAAKmC,UACJC,MAAK,WACFnC,IAAGoC,WAAW,SAASC,IAAIR,EAAKS,KAAKC,OAAO,CACxCC,UAAU,IACXL,MAAK,WACJR,EAASnB,eACTmB,EAAShB,eACTgB,EAASP,qBAEdqB,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,aASF,oBAA2C,cAAC,IAAD,CAAMrB,GAAG,IAAT,yB,cCjBhEsB,MAbf,YAA2B,IAATC,EAAQ,EAARA,KACd,OACI,qBAAKxB,UAAU,SAAf,SACI,sBAAKA,UAAU,kBAAkByB,MAAO,CAACC,MAAOF,EAAMG,OAAQH,GAA9D,UACI,qBAAKxB,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,2B,QCCzB4B,EAAYC,gBAAK,kBAAM,8DACvBC,EAAWD,gBAAK,kBAAM,8DAoDbE,MAlDf,WACE,IAAM1B,EAAWC,cACXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKA,QAkC7C,OAhCAyB,qBAAU,WACR,IAAMC,EAAcxD,IAAKyD,oBAAmB,SAAA3B,GA0B1C,OAzBGA,GACD7B,IAAGoC,WAAW,SAASC,IAAIR,EAAKS,KAAKmB,IAAI,CACvCC,KAAM7B,EAAKG,YACX2B,SAAU9B,EAAK8B,SACfnB,UAAU,EACVoB,MAAO/B,EAAK+B,MACZC,KAAMtE,IAASU,UAAU6D,WAAWC,kBACpCzB,IAAKT,EAAKS,MACTH,MAAK,WACNR,EAASvB,YAAe,CACtBkC,IAAKT,EAAKS,IACVsB,MAAO/B,EAAK+B,MACZ5B,YAAaH,EAAKG,YAClB2B,SAAU9B,EAAK8B,eAEhBxB,MAAK,WACNnC,IAAGoC,WAAW,SACb4B,YAAW,SAACC,GACX,IAAIvD,EAAQ,GACZuD,EAAcC,SAAQ,SAAA7B,GAAG,OAAI3B,EAAMyD,KAAK9B,EAAIhC,WAC5CsB,EAASlB,YAAYC,UAGxB+B,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAME,YAEvB,kBAAMW,QAGd,IAGD,sBAAKjC,UAAU,MAAf,UACY,OAATO,EAAgB,cAAC,IAAD,CAAUN,GAAG,UAAa,cAAC,IAAD,CAAUA,GAAG,MACxD,cAAC,EAAD,IACE,cAAC,WAAD,CAAU6C,SAAU,cAAC,EAAD,CAAQC,MAAM,UAAUvB,KAAM,MAAlD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,IAAIC,UAAWrB,EAAWsB,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWnB,aC7C5BqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,uBCLRO,EAAe,CACjBrE,WAAW,EACXsE,WAAY,CACRC,SAAU,GACVC,WAAY,GACZC,YAAa,IAEjBC,YAAa,GACbC,mBAAmB,EACnBpE,UAAU,GAwCCqE,EArCK,WAAmC,IAAlCzD,EAAiC,uDAAzBkD,EAAcQ,EAAW,uCAClD,OAAOA,EAAOnF,MACV,KAAKC,IACD,OAAO,2BACAwB,GADP,IAEInB,WAAW,EACXsE,WAAW,CACPC,SAAUM,EAAO5E,WAAW6E,GAC5BN,WAAYK,EAAO5E,WAAW6C,KAC9B2B,YAAaI,EAAO5E,WAAW8E,SAG3C,KAAKpF,IACD,OAAO,2BAAIwB,GAAX,IAAkBuD,YAAaG,EAAO1E,SAC1C,KAAKR,IACD,IAAIqF,EAAoC,mBAAlBH,EAAOvE,MAAuBuE,EAAOvE,MAAQuE,EAAOvE,MAAQ,IAClF,OAAO,2BAAIa,GAAX,IAAkBwD,kBAAmBK,IACzC,KAAKrF,IACD,OAAO,2BAAIwB,GAAX,IAAkBZ,SAAUsE,EAAOvE,QACvC,KAAKX,IACD,OAAO,2BACAwB,GADP,IAEInB,WAAW,EACXsE,WAAY,CACRC,SAAU,GACVC,WAAY,GACZC,YAAa,IAEjBC,YAAa,GACbC,mBAAmB,EACnBpE,UAAU,IAElB,QACI,OAAO,eAAIY,KC7CjBkD,EAAe,CACjBpD,KAAM,KACNgE,SAAU,IAmBCC,EAhBK,WAAmC,IAAlC/D,EAAiC,uDAAzBkD,EAAcQ,EAAW,uCAClD,OAAOA,EAAOnF,MACV,KAAKC,IACD,OAAO,2BAAIwB,GAAX,IAAkBF,KAAM4D,EAAOpF,OACnC,KAAKE,IACD,OAAO,2BAAIwB,GAAX,IAAkBF,KAAM,OAC5B,KAAKtB,IACD,IAAIG,EAAQqB,EAAMF,KAAO4D,EAAO/E,MAAMqF,QAAO,SAAAC,GAAE,OAAIA,EAAG1D,MAAQP,EAAMF,KAAKS,OAAO,GAChF,OAAO,2BAAIP,GAAX,IAAkB8D,SAAUnF,IAChC,KAAKH,IACD,OAAO,2BAAIwB,GAAX,IAAkB8D,SAAU,KAChC,QACI,OAAO,eAAI9D,KCRjBkE,EAAkBC,YAAgB,CACtCC,KAAMC,EACNvE,KAAMwE,IAGFC,EAAQC,YAAYN,EAAiBO,eAE3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,SAG1BpC,K,+BC7BA,kTACO,IAAMqC,EAAmB,mBACnBC,EAAa,aACbC,EAAgB,gBAChBC,EAAkB,kBAGlBC,EAAa,aACbC,EAAmB,mBACnBC,EAAqB,qBAGrBC,EAAuB,uBACvBC,EAAY,c","file":"static/js/main.274287a0.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBd_-tFL3K-4yue4Nq7oKTZhKyQq8IaRWw\",\r\n    authDomain: \"chat-msg-a79b2.firebaseapp.com\",\r\n    projectId: \"chat-msg-a79b2\",\r\n    storageBucket: \"chat-msg-a79b2.appspot.com\",\r\n    messagingSenderId: \"409282767250\",\r\n    appId: \"1:409282767250:web:aa7b2da5f37420a721b94b\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = app.auth();\r\nconst db = app.firestore();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, db, googleProvider }","import * as actionsType from '../actions/actionsType';\r\n\r\nexport const getUserDetails = (data) => ({ type: actionsType.GET_USER_DETAILS, data: data });\r\nexport const emptyUser = () => ({ type: actionsType.EMPTY_USER });\r\nexport const getAllUsers = (users) => ({ type: actionsType.GET_ALL_USERS, users: users });\r\nexport const emptyAllUsers = () => ({ type: actionsType.EMPTY_ALL_USERS });","import * as actionsType from '../actions/actionsType';\r\n\r\nexport const startChat = (friendData) => ({ type: actionsType.START_CHAT, friendData });\r\nexport const getAllMessages = (allMsg) => ({ type: actionsType.GET_ALL_MESSAGES, allMsg });\r\nexport const isScreenSmallSize = (boolean) => ({ type: actionsType.IS_SCREEN_SMALL_SIZE, value: boolean });\r\nexport const openChat = (boolean) => ({ type: actionsType.OPEN_CHAT, value: boolean });\r\nexport const resetChatSetting = () => ({ type: actionsType.RESET_CHAT_SETTING });\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Logo.css';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <Link to='/'>\r\n                <img src={process.env.PUBLIC_URL + `chat-icon.jpg`} alt=\"chat-logo\" />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react';\r\nimport './Navbar.css';\r\nimport Logo from '../Logo/Logo'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\nimport { auth, db } from '../../firebase';\r\nimport { emptyUser } from '../../store/actions/userActions';\r\nimport { emptyAllUsers } from '../../store/actions/userActions';\r\nimport { resetChatSetting } from '../../store/actions/chatActions';\r\n\r\nfunction Navbar() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user.user);\r\n    \r\n    const logout = () => {\r\n        auth.signOut()\r\n        .then(() => {\r\n            db.collection('users').doc(user.uid).update({\r\n                isOnline: false\r\n            }).then(() => {\r\n                dispatch(emptyUser());\r\n                dispatch(emptyAllUsers());\r\n                dispatch(resetChatSetting());\r\n            })\r\n        }).catch(error => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className='navbar'>\r\n            <Logo />\r\n            { user !== null && <div className=\"name\">{user.displayName}</div>}\r\n            <div className=\"links\">\r\n                {\r\n                    user !== null ? <button onClick={logout}>Logout</button> : <Link to='/'>Login</Link>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nfunction Loader({ size }) {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div className=\"sk-folding-cube\" style={{width: size, height: size}}>\r\n                <div className=\"sk-cube1 sk-cube\"></div>\r\n                <div className=\"sk-cube2 sk-cube\"></div>\r\n                <div className=\"sk-cube4 sk-cube\"></div>\r\n                <div className=\"sk-cube3 sk-cube\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { lazy, Suspense, useEffect } from \"react\";\nimport Navbar from '../Components/Navbar/Navbar';\nimport { Switch, Route } from 'react-router-dom';\nimport { auth, db } from '../firebase';\nimport { getUserDetails, getAllUsers } from '../store/actions/userActions';\nimport { useDispatch } from 'react-redux';\nimport Loader from '../Components/Loader/Loader';\nimport { useSelector  } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport firebase from 'firebase';\n\nconst LoginLazy = lazy(() => import('../Container/Login/Login'))\nconst MainLazy = lazy(() => import('../Container/Main/Main'))\n\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user.user);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if(user) {\n        db.collection('users').doc(user.uid).set({\n          name: user.displayName,\n          photoURL: user.photoURL,\n          isOnline: true,\n          email: user.email,\n          time: firebase.firestore.FieldValue.serverTimestamp(),\n          uid: user.uid,\n        }).then(() => {\n          dispatch(getUserDetails({\n            uid: user.uid,\n            email: user.email,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          }))\n        }).then(() => {\n          db.collection(\"users\")\n          .onSnapshot((querySnapshot) => {\n            let users = [];\n            querySnapshot.forEach(doc => users.push(doc.data()));\n            dispatch(getAllUsers(users))\n          })\n        })\n        .catch(error => alert(error.message));\n      }\n      return () => unsubscribe;\n    });\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user !== null ? <Redirect to='/main' /> : <Redirect to='/' />}\n      <Navbar />\n        <Suspense fallback={<Loader color='#1976d2' size={100} />}>\n          <Switch>\n            <Route path='/' component={LoginLazy} exact />\n            <Route path='/main' component={MainLazy} />\n          </Switch>\n        </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionsType from '../actions/actionsType';\r\n\r\nconst initialState = {\r\n    startChat: false,\r\n    friendInfo: {\r\n        friendId: '',\r\n        friendName: '',\r\n        friendImage: '',\r\n    },\r\n    allMessages: [],\r\n    IsScreenSmallSize: false,\r\n    openChat: false\r\n}\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionsType.START_CHAT:\r\n            return {\r\n                ...state,\r\n                startChat: true,\r\n                friendInfo:{\r\n                    friendId: action.friendData.id,\r\n                    friendName: action.friendData.name,\r\n                    friendImage: action.friendData.image\r\n                }\r\n            }\r\n        case actionsType.GET_ALL_MESSAGES:\r\n            return {...state, allMessages: action.allMsg}\r\n        case actionsType.IS_SCREEN_SMALL_SIZE:\r\n            let getValue = typeof(action.value) === 'boolean' ? action.value : action.value < 500;\r\n            return {...state, IsScreenSmallSize: getValue}\r\n        case actionsType.OPEN_CHAT:\r\n            return {...state, openChat: action.value}\r\n        case actionsType.RESET_CHAT_SETTING:\r\n            return {\r\n                ...state,\r\n                startChat: false,\r\n                friendInfo: {\r\n                    friendId: '',\r\n                    friendName: '',\r\n                    friendImage: '',\r\n                },\r\n                allMessages: [],\r\n                IsScreenSmallSize: false,\r\n                openChat: false\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default chatReducer;","import * as actionsType from '../actions/actionsType';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    allUsers: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionsType.GET_USER_DETAILS:\r\n            return {...state, user: action.data}\r\n        case actionsType.EMPTY_USER:\r\n            return {...state, user: null}\r\n        case actionsType.GET_ALL_USERS:\r\n            let users = state.user ? action.users.filter(el => el.uid !== state.user.uid) : [];\r\n            return {...state, allUsers: users}\r\n        case actionsType.EMPTY_ALL_USERS:\r\n            return {...state, allUsers: []}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport default userReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ChatReducer from './store/reducers/chatReducer';\nimport UserReducer from './store/reducers/userReducer';\n\nconst combinesReducer = combineReducers({\n  chat: ChatReducer,\n  user: UserReducer\n});\n\nconst store = createStore(combinesReducer, applyMiddleware());\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","//  User\r\nexport const GET_USER_DETAILS = 'GET_USER_DETAILS';\r\nexport const EMPTY_USER = 'EMPTY_USER';\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const EMPTY_ALL_USERS = 'EMPTY_ALL_USERS';\r\n\r\n//  Chat\r\nexport const START_CHAT = 'START_CHAT';\r\nexport const GET_ALL_MESSAGES = 'GET_ALL_MESSAGES';\r\nexport const RESET_CHAT_SETTING = 'RESET_CHAT_SETTING';\r\n\r\n// Screen\r\nexport const IS_SCREEN_SMALL_SIZE = 'IS_SCREEN_SMALL_SIZE';\r\nexport const OPEN_CHAT = 'OPEN_CHAT';\r\n"],"sourceRoot":""}